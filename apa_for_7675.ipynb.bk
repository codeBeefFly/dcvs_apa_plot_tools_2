{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 147,
   "id": "c03a9b22",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "log path:  D:\\Z_DesayWorkSpace\\7675_aion_apa\\20220303\\14_0303_mcu3_dx0.2/logfile_all.txt\n",
      "\n",
      "******************************\n",
      "1 True\n",
      "2 True\n",
      "3 True\n",
      "4 True\n",
      "5 True\n",
      "6 True\n",
      "7 True\n",
      "8 True\n",
      "9 True\n",
      "10 True\n",
      "11 False\n",
      "12 True\n",
      "13 True\n",
      "14 True\n",
      "******************************\n",
      "\n",
      "average ComputeOdom ms per frame: 47.883672039243166\n"
     ]
    }
   ],
   "source": [
    "#!/usr/bin/env python\n",
    "# coding: utf-8\n",
    "\n",
    "# In[28]:\n",
    "\n",
    "import matplotlib\n",
    "# matplotlib.use('nbAgg')  # 大小写无所谓 tkaGg ,TkAgg 都行\n",
    "# matplotlib.use('tkAgg')  # 大小写无所谓 tkaGg ,TkAgg 都行\n",
    "# matplotlib.use('default')  # 大小写无所谓 tkaGg ,TkAgg 都行\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "import math\n",
    "\n",
    "\n",
    "# In[81]:\n",
    "\n",
    "\n",
    "# car_path is directory of the log file\n",
    "# log_car_file is the log file name\n",
    "# car_path = r\"D:\\Z_DesayWorkSpace\\7675_aion_apa\\20220303\\4_0303mcu_-0.6/\"\n",
    "car_path = r\"D:\\Z_DesayWorkSpace\\7675_aion_apa\\20220303\\14_0303_mcu3_dx0.2/\"\n",
    "\n",
    "# log_car_file = car_path+\"session.log\"\n",
    "# log_car_file = car_path+\"logfile.txt\"\n",
    "log_car_file = car_path+\"logfile_all.txt\"\n",
    "\n",
    "\n",
    "\n",
    "# paths to computed_path.txt\n",
    "path_car_file = car_path+\"computed_path.txt\"\n",
    "path_car_file2 = car_path+\"computed_path2.txt\"\n",
    "# path_car_file3 = car_path+\"computed_path3.txt\"\n",
    "# path_car_file4 = car_path+\"computed_path4.txt\"\n",
    "\n",
    "# paths to naive_trajectory_fixed_dtXY.txt\n",
    "# traj_car_file = car_path+\"naive_trajectory_fixed_dtXY.txt\"\n",
    "\n",
    "\n",
    "# In[89]:\n",
    "print(\"log path: \", log_car_file)\n",
    "# print(\"car path: \", path_car_file)\n",
    "\n",
    "\n",
    "# car data\n",
    "odom_x_car = []         # odometry x\n",
    "odom_y_car = []         # odometry y\n",
    "odom_theta_car = []     # odometry theta (angle)\n",
    "odom_phi_car = []       # odometry steering\n",
    "odom_start_x = []\n",
    "odom_start_y = []\n",
    "odom_goal_x = []        # odometry x at goal reached\n",
    "odom_goal_y = []        # odometry y at goal reached\n",
    "apa_x_car = []\n",
    "apa_y_car = []\n",
    "apa_theta_car = []\n",
    "control_v_car = []      # ComputeControlValue speed\n",
    "control_steer_car = []  # ComputeControlValue steering\n",
    "control_w_car = []      # ComputeControlValue steering velocity\n",
    "control_car_time = []   # ComputeConrolValue timestamp\n",
    "pub_v_car = []          # PubControl speed\n",
    "pub_car_time = []       # PubControl timestamp\n",
    "expect_x_car = []       # ComputeControlValue expected x\n",
    "expect_y_car = []       # ComputeControlValue expected y\n",
    "car_time = []           # cnn time\n",
    "parking_points_x = []\n",
    "parking_points_y = []\n",
    "\n",
    "traj_cache_car_x = []   # top of trajectory cache x\n",
    "traj_cache_car_y = []   # top of trajectory cache x\n",
    "traj_car_time = []      # trajectory timestamp\n",
    "\n",
    "\n",
    "odom_car_control_x = []\n",
    "odom_car_control_y = []\n",
    "\n",
    "# log timestamps for runtime calculations\n",
    "mpc_time_car = []\n",
    "frame_times_car = []\n",
    "odom_times_car = []\n",
    "apa_rc_speed = []\n",
    "apa_rc_angle = []\n",
    "apa_rc_times = []\n",
    "rc_time = []\n",
    "\n",
    "\n",
    "flag = [False for x in range(14)]\n",
    "\n",
    "\n",
    "\n",
    "# Parse Car log file\n",
    "with (open(log_car_file,\"r\")) as f:\n",
    "    begin_t = 0.0\n",
    "    time_set = False\n",
    "    current_t = 0\n",
    "    control_begin = False\n",
    "    get_cache = False\n",
    "    frame_start = 0\n",
    "    frame_start_apa = 0\n",
    "    frame_end = 0\n",
    "    odom_start = 0\n",
    "    \n",
    "    current_log_time = 0\n",
    "    current_log_time1 = 0\n",
    "    \n",
    "    line_num = 0\n",
    "    \n",
    "    start_goal = False\n",
    "    goal_reached = False\n",
    "    \n",
    "    \n",
    "    for line in f:\n",
    "\n",
    "        if \"[tsl]\" in line:\n",
    "            line = line.replace(\"[tsl]\", \"\")\n",
    "        \n",
    "        line_num += 1\n",
    "        \n",
    "        '''if (\"[info]\" in line and len(line.split()[1].split(':')) > 2):\n",
    "            raw_sec = line.split()[1].split(':')[2]\n",
    "            raw_min = line.split()[1].split(':')[1]\n",
    "            current_log_time = float(raw_sec.replace(']','')) + 60*float(raw_min)\n",
    "            raw_times = line.split(']')[0].split(':')\n",
    "            ms = float(raw_times[3])\n",
    "            s = float(raw_times[2])\n",
    "            m = float(raw_times[1])\n",
    "            #current_log_time = 0.001*ms + s + 60*m'''\n",
    "        \n",
    "        # save current cnn timestamp -- 1\n",
    "        if (\"[info] Odometry localization inpput: <\" in line):\n",
    "            flag[0] = True\n",
    "#             print(\"1. [info] Odometry localization inpput: in line\")\n",
    "            try:\n",
    "                raw_t = line.split()[6]\n",
    "                raw_t = raw_t.split('<')[1]\n",
    "                raw_t = raw_t.replace('>','')\n",
    "                t = int(raw_t)\n",
    "                current_t = t\n",
    "            except IndexError:\n",
    "                print (line_num)\n",
    "    \n",
    "        # parse odometry -- 2\n",
    "        if (\"Current Pose(x, y, theta, phi):\" in line):\n",
    "            flag[1] = True\n",
    "#             print(\"2. Current Pose(x, y, theta, phi): inline\")\n",
    "            try:\n",
    "                raw_x = line.split()[8]\n",
    "                raw_x = raw_x.replace('(','').replace(',','')\n",
    "                raw_y = line.split()[9]\n",
    "                raw_y = raw_y.replace(',','').replace(')','')\n",
    "                raw_theta = line.split()[10]\n",
    "                raw_theta = raw_theta.replace(',','')\n",
    "                raw_phi = line.split()[11]\n",
    "                raw_phi = raw_phi.replace(')','')\n",
    "                odom_x_car.append(float(raw_x))\n",
    "                odom_y_car.append(float(raw_y))\n",
    "                odom_theta_car.append(float(raw_theta))\n",
    "                if (control_begin):\n",
    "                    odom_phi_car.append(float(raw_phi))\n",
    "                car_time.append(current_t)\n",
    "                if (control_begin):\n",
    "                    odom_car_control_x.append(float(raw_x))\n",
    "                    odom_car_control_y.append(float(raw_y))\n",
    "                if (start_goal):\n",
    "                    odom_start_x.append(float(raw_x))\n",
    "                    odom_start_y.append(float(raw_y))\n",
    "                    start_goal = False\n",
    "                if (goal_reached):\n",
    "                    odom_goal_x.append(float(raw_x))\n",
    "                    odom_goal_y.append(float(raw_y))\n",
    "                    goal_reached = False\n",
    "            except ValueError:\n",
    "                print (line_num)\n",
    "                continue\n",
    "           \n",
    "        # APAPose -- 3\n",
    "        elif (\"APAPose Pose(x, y, theta, phi):\" in line):\n",
    "            flag[2] = True\n",
    "#             print(\"3. APAPose Pose(x, y, theta, phi): in line\")\n",
    "            try:\n",
    "                raw_x = line.split()[8]\n",
    "                raw_x = raw_x.replace('(','').replace(',','')\n",
    "                raw_y = line.split()[9]\n",
    "                raw_y = raw_y.replace(',','').replace(')','')\n",
    "                raw_theta = line.split()[10]\n",
    "                raw_theta = raw_theta.replace(',','')\n",
    "                apa_x_car.append(float(raw_x))\n",
    "                apa_y_car.append(float(raw_y))\n",
    "                apa_theta_car.append(float(raw_theta))\n",
    "                \n",
    "            except ValueError:\n",
    "                print (line_num)\n",
    "                continue\n",
    "        \n",
    "        # parse ComputeControlValue control output -- 4\n",
    "        elif (\"Computed command:\" in line):\n",
    "            flag[3] = True\n",
    "#             print(\"4. Computed command: in line\")\n",
    "            control_begin = True\n",
    "            try:\n",
    "                raw_v = line.split()[5]\n",
    "                raw_w = line.split()[6]\n",
    "                raw_steer = line.split()[7]\n",
    "                control_v_car.append(float(raw_v))\n",
    "                control_w_car.append(float(raw_w))\n",
    "                control_steer_car.append(float(raw_steer))\n",
    "                control_car_time.append(current_t)\n",
    "                if (frame_start == 0):\n",
    "                    frame_start = current_log_time\n",
    "                else:\n",
    "                    frame_time = current_log_time - frame_start\n",
    "                    if (frame_time > 0):\n",
    "                        frame_times_car.append(frame_time)\n",
    "                    frame_start = 0\n",
    "            except ValueError:\n",
    "                print (line_num)\n",
    "                continue\n",
    "            \n",
    "        # control start -- 5\n",
    "        elif (\">>> control start\" in line):\n",
    "            flag[4] = True\n",
    "#             print(\"5. >>> control start\")\n",
    "            start_mpc = current_log_time\n",
    "            \n",
    "        # ComputeControlValue -- 6\n",
    "        elif (\"ComputeControlValueStep::getCommandActive printing\" in line):\n",
    "            flag[5] = True\n",
    "#             print(\"6. ComputeControlValue:: in line\")\n",
    "            get_cache = True\n",
    "            \n",
    "        # trajectory cache -- 7\n",
    "        elif (\"[info] trajectory cache\" in line and get_cache):\n",
    "            flag[6] = True\n",
    "#             print(\"7. [info] trajectory cache in line\")\n",
    "            try:\n",
    "                raw_x = line.split()[5]\n",
    "                raw_y = line.split()[6]\n",
    "                traj_cache_car_x.append(float(raw_x))\n",
    "                traj_cache_car_y.append(float(raw_y))\n",
    "                traj_car_time.append(current_t)\n",
    "                get_cache = False\n",
    "            except ValueError:\n",
    "                print (line_num)\n",
    "                continue\n",
    "        \n",
    "        # parse PubControl controls -- 8\n",
    "        elif (\"PubControl speed\" in line):\n",
    "            flag[7] = True\n",
    "#             print(\"8. PubControl speed in line\")\n",
    "            try:\n",
    "                raw_v = line.split()[4].split(\"=\")[1]\n",
    "                pub_v_car.append(float(raw_v))\n",
    "                pub_car_time.append(current_t)\n",
    "            except IndexError:\n",
    "                print (line_num)\n",
    "                continue\n",
    "            \n",
    "        # <<< end -- 9\n",
    "        elif (\"<<< end\" in line):\n",
    "            flag[8] = True\n",
    "#             print(\"9. <<< end in line\")\n",
    "            if (start_mpc > 0):\n",
    "                mpc_time_car.append(current_log_time - start_mpc)\n",
    "                    \n",
    "        # Expect pose -- 10\n",
    "        elif (\"Expect pose:\" in line):\n",
    "            flag[9] = True\n",
    "#             print(\"10. Expect pose: in line\")\n",
    "            raw_x = line.split()[5].replace(',','')\n",
    "            raw_y = line.split()[6].replace(',','')\n",
    "            try:\n",
    "                expect_x_car.append(float(raw_x))\n",
    "                expect_y_car.append(float(raw_y))\n",
    "            except ValueError:\n",
    "                expect_x_car.append(0)\n",
    "                expect_y_car.append(0)\n",
    "                 \n",
    "        # apa rc -- 11\n",
    "        elif (\"apa rc\" in line and len(line.split())>4):\n",
    "            flag[10] = True\n",
    "#             print(\"11. apa rc in line \")\n",
    "            try:\n",
    "                raw_speed = line.split(\",\")[1].split()[2]\n",
    "                raw_angle = line.split(\",\")[2].split()[2]\n",
    "                apa_rc_speed.append(float(raw_speed))\n",
    "                apa_rc_angle.append(float(raw_angle))\n",
    "                rc_time.append(current_t)\n",
    "\n",
    "                if (frame_start_apa == 0):\n",
    "                    frame_start_apa = current_log_time\n",
    "                else:\n",
    "                    frame_time = current_log_time - frame_start_apa\n",
    "                    if (frame_time > 0):\n",
    "                        apa_rc_times.append(frame_time)\n",
    "                    frame_start_apa = 0\n",
    "            except IndexError:\n",
    "                print (line_num)\n",
    "                continue\n",
    "                \n",
    "        # check start pose -- 12\n",
    "        elif (\"Computing trajectory size\" in line):\n",
    "            flag[11] = True\n",
    "#             print(\"12. Computing trajectory size in line\")\n",
    "            start_goal = True\n",
    "                \n",
    "        # check if goal reached -- 13\n",
    "        elif (\"The goal is reached\" in line):\n",
    "            flag[12] = True\n",
    "#             print(\"13. The goal is reached in line\")\n",
    "            goal_reached = True\n",
    "            \n",
    "        # get ABCD parking points -- 14\n",
    "        elif (\"ParkingMiddleGoals: parking points\" in line):\n",
    "            flag[13] = True\n",
    "#             print(\"14. ParkingMiddleGoals: parking points in line\")\n",
    "            raw_ABCD = line.split()\n",
    "            parking_points_x.append(float(raw_ABCD[7]))\n",
    "            parking_points_y.append(float(raw_ABCD[8]))\n",
    "            parking_points_x.append(float(raw_ABCD[10]))\n",
    "            parking_points_y.append(float(raw_ABCD[11]))\n",
    "            parking_points_x.append(float(raw_ABCD[13]))\n",
    "            parking_points_y.append(float(raw_ABCD[14]))\n",
    "            parking_points_x.append(float(raw_ABCD[16]))\n",
    "            parking_points_y.append(float(raw_ABCD[17]))\n",
    "\n",
    "# check  INFO line existance\n",
    "print(\"\\n\" + \"*\"*30)\n",
    "for i in range(14):\n",
    "    print(i + 1, flag[i])\n",
    "print(\"*\"*30 + \"\\n\")\n",
    "            \n",
    "            \n",
    "dt = car_time[len(car_time)-1] - car_time[0]\n",
    "print (\"average ComputeOdom ms per frame: {}\".format(dt/len(car_time)))\n",
    "\n",
    "# dt = control_car_time[len(control_car_time)-1] - control_car_time[0]\n",
    "# print (\"average ComputeControlValue ms per frame: {}\".format(dt/len(control_car_time)))\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 148,
   "id": "d827e667",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "compute path 2 error\n"
     ]
    }
   ],
   "source": [
    "# load computed path files\n",
    "path_carx = []\n",
    "path_cary = []\n",
    "with (open(path_car_file,\"r\")) as f:\n",
    "    for line in f:\n",
    "        if (\"x y\" not in line):\n",
    "            path_carx.append(float(line.split()[0]))\n",
    "            path_cary.append(float(line.split()[1]))\n",
    "\n",
    "try:\n",
    "    path2_carx = []\n",
    "    path2_cary = []\n",
    "    with (open(path_car_file2,\"r\")) as f:\n",
    "        for line in f:\n",
    "            if (\"x y\" not in line):\n",
    "                path2_carx.append(float(line.split()[0]))\n",
    "                path2_cary.append(float(line.split()[1]))\n",
    "except:\n",
    "    print(\"compute path 2 error\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 149,
   "id": "65d55980",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 576x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# compare odometry and computed path (Car)\n",
    "try:\n",
    "    pillar_x = parking_points_x[0] + 4.7\n",
    "    pillar_y = parking_points_y[0] - 7.45\n",
    "except:\n",
    "    print(\"no pillar value received\")\n",
    "    \n",
    "plt.figure(figsize=(8,10))\n",
    "\n",
    "# 1. plot computed path\n",
    "plt.plot(path_carx, path_cary, label=\"car_path1\", linewidth=4, alpha=0.5)\n",
    "plt.plot(path2_carx, path2_cary, label=\"car_path2\", linewidth=4)\n",
    "# plt.plot(path3_carx, path3_cary, label=\"car_path3\", linewidth=4)\n",
    "#plt.plot(path4_carx, path4_cary, label=\"car_path4\", linewidth=4)\n",
    "\n",
    "# 2. plot odometry\n",
    "plt.plot(odom_x_car, odom_y_car, label=\"car_odom\")\n",
    "\n",
    "# 3. plot odom start, goal\n",
    "plt.scatter(odom_start_x, odom_start_y, label=\"start\", marker='*', color='y', s=150)\n",
    "plt.scatter(odom_goal_x, odom_goal_y, label=\"goals\", marker='*', color='k', s=150)\n",
    "\n",
    "# 4. plot parking slot points\n",
    "plt.plot(parking_points_x, parking_points_y, linewidth=4)\n",
    "\n",
    "# 5. plot pillars\n",
    "try:\n",
    "    plt.plot(pillar_x, pillar_y, marker='.', markersize=100)\n",
    "except:\n",
    "    print(\"cannot plot pillar\")\n",
    "\n",
    "# 6. plot apa car post\n",
    "plt.plot(apa_x_car, apa_y_car, label=\"apa_pose\")\n",
    "\n",
    "plt.legend(loc=\"best\")\n",
    "# plt.xlim(-1,9)\n",
    "# plt.ylim(-6,10)\n",
    "\n",
    "\n",
    "plt.title(\"Odom vs. Path\")\n",
    "\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 150,
   "id": "bbc35139",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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7NmzWbBgAeeeey7Dhg2jtraWhQsXMmbMGA4++GCOO+441q9fD1ghuo4//ngOPvhgjjjiCJYtWwZYaXmuvfZajjrqqPbweM6ooSQTfqsNjB07FhGJNmKhUIgVS1cCvRLS3PoeXcTueVv57C0X56Z4CGzs2LE4HA7C4XCnaUCvv/76aCqTWD799FMmT56c0LjjhAkTovEEG+Oyyy6LmiufeuopAD54pAKAHvvszMZ+1K/zeX1egMP6Xcu3gb8xe/bsrNTann8ekp1ibI894Gc/a3r9woULmT59OvPnz0dVGTlyJGPGjCEcDvPcc8/xv//9j2AwyPDhwzn44IMBOP/883nwwQcZM2YMN998M3/84x+jQtHj8fDhhx/yt7/9jVNPPZWFCxdSUlLCgAEDuOaaa+jWrVv02F988QVr167l66+/BqCiooLi4mIeeugh7rnnHg455BACgQBXXHEFr7zyCj169OCf//wnN954I0888QSTJk3i0UcfZeDAgcyfP59LL72U9957D7DiTL7zzjvtEXIrOpQErMUaStolVbiq7hX5LSIzgNc6aijJCLc2UFpayoQJE3jqqadwOBx4vV727LM3XwCegrar4uIUhh/m4t/vhVj/Y4jee6buYS0tLWX48OFs2rSJ5557Lisb0PqUlpbSv39/Vq5c2WDdXXfdxWmnndam69CSYHM4HMyZM4dwOBwdSwPY9KWVqLbXoTszQux1Uhd6sgZ/3UF03617p7gv7cXcuXM5/fTTo9HyzzjjDD766CPC4TCnn346eXlWdKFTTjkFgO3bt1NRUcGYMWMAuOCCCzj77LOj5UW2O+CAAxg8eHDUg3rvvfdm9erVuwi3vffem++//54rrriCk046ifHjxzeo3/Lly/n666859thjAavT3Lt3b6qqqpg3b94ux/b5diY5Pvvss9sllmSmDSUZ4dZGDj/8cJ566imuv/56TjnlFDY+3wcI4i1I7CEbMzGPV9/28cGMan5xc9ORxJNBz549UdVO1YAWFxfTvXt3tmzZ0mDdiSeeGDU7xcvkyZObFWwALpeLsWPH8uijj+4i3NatDOHyCt377dTcPLt5GNAryPc7+hLomCmP7UJzGlaqaC6OblvGhyLpcCId3AgOh4P6c227du3Kl19+yZtvvsnDDz/M888/zxNPPNGgfoMHD27gQLRjxw6Ki4ubTHja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\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# plot control speed and control steer from PubControl (Car)\n",
    "\n",
    "fig, ax3 = plt.subplots()\n",
    "\n",
    "# pub control speed\n",
    "ln4 = ax3.plot(pub_v_car, 'k.-', label = \"pub control speed\") # \n",
    "# plt.legend(loc=\"upper left\")\n",
    "plt.legend(loc=\"lower left\")\n",
    "ax3.set_ylabel(\"control speed (m/s)\")\n",
    "ax3.set_xlabel(\"counts\")\n",
    "plt.ylim(-0.5,0.5)\n",
    "\n",
    "# control steer vs odom steer\n",
    "ax4 = ax3.twinx()\n",
    "ln5 = ax4.plot(control_steer_car, 'm', label = \"control steer\")\n",
    "ln5 = ax4.plot(odom_phi_car, 'b', label = \"odom steer\", alpha=0.6)\n",
    "plt.legend(loc=\"upper right\")\n",
    "ax4.set_ylabel(\"steer (rad)\")\n",
    "# plt.xlim(0,2500)\n",
    "plt.title(\"Pub speed & Control steer + odom steer\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 151,
   "id": "421ef9c3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# plot control speed and control steer from ComputeControlValue (Car)\n",
    "\n",
    "fig, ax3 = plt.subplots()\n",
    "ln4 = ax3.plot(control_v_car, 'k.-', label = \"control speed\")\n",
    "ax3.set_ylabel(\"control speed (m/s)\")\n",
    "ax3.set_xlabel(\"counts\")\n",
    "#plt.ylim(0,0.3)\n",
    "\n",
    "ax4 = ax3.twinx()\n",
    "ln5 = ax4.plot(control_steer_car, 'm.-', label = \"control steer\")\n",
    "ax4.set_ylabel(\"control steer (rad)\")\n",
    "#plt.xlim(0,400)\n",
    "plt.title(\"Control speed & Control steer\")\n",
    "plt.legend(loc='upper right',fontsize='x-small')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 152,
   "id": "f6ce91ee",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# manually calculate actual velocity\n",
    "\n",
    "real_car_v = []\n",
    "for t in control_car_time:\n",
    "    try:\n",
    "        i = car_time.index(t)\n",
    "    except ValueError:\n",
    "        real_car_v.append(real_car_v[len(real_car_v)-1])\n",
    "        continue\n",
    "    prev_i = i - 10\n",
    "    dt = car_time[i] - car_time[prev_i]\n",
    "    \n",
    "    \n",
    "    cosT = math.cos(odom_theta_car[prev_i])\n",
    "    sinT = math.sin(odom_theta_car[prev_i])\n",
    "    dx = odom_x_car[i] - odom_x_car[prev_i]\n",
    "    dy = odom_y_car[i] - odom_y_car[prev_i]\n",
    "    dx_copy = dx\n",
    "    dx = cosT*dx + sinT*dy\n",
    "    dy = -sinT*dx_copy + cosT*dy\n",
    "    d = math.sqrt(dx*dx + dy*dy)\n",
    "    if (dt == 0):\n",
    "        real_car_v.append(0)\n",
    "    else:\n",
    "        if (dx >= 0):\n",
    "            real_car_v.append(d/dt*1000)\n",
    "        else:\n",
    "            real_car_v.append(d/dt*-1000) \n",
    "\n",
    "# plot control with actual speed\n",
    "plt.plot(control_car_time, control_v_car, label=\"ComputeControl v\")\n",
    "plt.plot(pub_car_time, pub_v_car, label=\"PubControl v\")\n",
    "# plt.plot(rc_time, apa_rc_speed, label=\"apa rc v\")\n",
    "plt.plot(control_car_time, real_car_v, label=\"Observed v\")\n",
    "plt.title(\"Velocity Comparisons\")\n",
    "plt.legend(loc='upper right',fontsize='x-small')\n",
    "# plt.legend(loc='lower left', fontsize='x-small')\n",
    "# plt.xlim(12000,26000)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cc7209f2",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1f1715e8",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "10537aed",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "db3034cb",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1a70d9dd",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
